Introdução ao React
Os sistemas web mudaram bastante nas últimas duas décadas. Eles surgiram com HTML estático no final dos anos 1990, onde as páginas eram meramente informativas e a interação com usuário se dava unicamente por meio de links.

Nos anos 2000, começa o uso de programação dentro dos servidores web para criar páginas HTML customizadas a partir de dados, o que permite a criação de sistemas minimamente interativos baseados em web. Essa mudança levou ao grande crescimento da área de sistemas web impulsionado majoritariamente pelo e-commerces.

No entanto, a mudança cultural que levaria as pessoas a comprar pela web não foi tão rápida quanto o esperado e houve o estouro da bolha, como foi chamado.

Os sistemas web saíram de evidência nessa época sendo recuperados aproximadamente em 2008 quando surgiram as redes sociais digitais. Essas redes começaram a demandar sistemas mais interativos, responsivos e que não fizessem round-trip, a ida e volta ao servidor que faz com que a página recarregue.

Torna-se comum o uso de Ajax, que permite consultas ao servidor em background e bibliotecas de manipulação do HTML.

No entanto, as redes sociais demandavam tecnologias web mais práticas para seu contexto. Surgem então bibliotecas e frameworks focados em frontend. Começa haver uma migração da lógica de servidor para uma lógica de lado cliente, que usa o servidor apenas para acesso aos dados.

Aparece o contexto de SPA - Single Page Applications, que utiliza apenas uma página HTML modificada conforme a interação com o usuário ou eventos para um sistema inteiro. É nesse contexto em que surge o React, hoje ele é a principal biblioteca de frontend para a produção de SPA.

O React também inaugura o conceito de programação reativa em frontend. Que basicamente é a reconstrução da página sempre que houver mudança nos dados. Iso é feito de uma forma muito inteligente pois ele é capaz de renderizar apenas as partes da página que são dependentes dos dados que foram modificados e não o todo, tendo por resultado um ótimo desempenho.

Para isso, o React usa uma arquitetura de componentes. Grande parte da programação em React está em saber dividir bem uma página em componentes e fazê-los de forma reutilizável e que admita composição com outros componentes.

Veremos o conceito de componente a seguir.